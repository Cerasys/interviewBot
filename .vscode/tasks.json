{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Web",
            "type": "dotenv",
            "targetTasks": [
                "Restore Web",
                "Web pnpm start"
            ],
            "file": "${input:dotEnvFilePath}"
        },
        {
            "label": "Restore Web",
            "type": "shell",
            "command": "azd restore web",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Web pnpm start",
            "detail": "Helper task--use 'Start Web' task to ensure environment is set up correctly",
            "type": "shell",
            "command": "pnpm run start",
            "options": {
                "cwd": "${workspaceFolder}/src/web/",
                "env": {
                    "REACT_APP_API_BASE_URL": "http://localhost:3100",
                    "BROWSER": "none"
                }
            },
            "presentation": {
                "panel": "dedicated"
            },
            "problemMatcher": []
        },
        {
            "label": "Start API",
            "type": "dotenv",
            "targetTasks": [
                "Restore API",
                "API pnpm start"
            ],
            "file": "${input:dotEnvFilePath}"
        },
        {
            "label": "Restore API",
            "type": "shell",
            "command": "azd restore api",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "API pnpm start",
            "detail": "Helper task--use 'Start API' task to ensure environment is set up correctly",
            "type": "shell",
            "command": "pnpm run start",
            "options": {
                "cwd": "${workspaceFolder}/src/api/",
                "env": {
                    "NODE_ENV": "development"
                }
            },
            "presentation": {
                "panel": "dedicated"
            },
            "problemMatcher": []
        },
        {
            "label": "Start API and Web",
            "dependsOn": [
                "Start API",
                "Start Web"
            ],
            "problemMatcher": []
        },
        {
            "type": "pnpm",
            "script": "build",
            "path": "src/api",
            "group": "build",
            "problemMatcher": [],
            "label": "pnpm: build - src/api",
            "detail": "tsc -b ."
        },
        {
            "type": "func",
            "label": "func: host start",
            "command": "host start",
            "problemMatcher": "$func-node-watch",
            "isBackground": true,
            "dependsOn": "pnpm build (functions)",
            "options": {
                "cwd": "${workspaceFolder}/src\\emails"
            }
        },
        {
            "type": "shell",
            "label": "pnpm build (functions)",
            "command": "pnpm run build",
            "dependsOn": "pnpm clean (functions)",
            "problemMatcher": "$tsc",
            "options": {
                "cwd": "${workspaceFolder}/src\\emails"
            }
        },
        {
            "type": "shell",
            "label": "pnpm install (functions)",
            "command": "pnpm install",
            "options": {
                "cwd": "${workspaceFolder}/src\\emails"
            }
        },
        {
            "type": "shell",
            "label": "pnpm prune (functions)",
            "command": "pnpm prune --production",
            "dependsOn": "pnpm build (functions)",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}/src\\emails"
            }
        },
        {
            "type": "shell",
            "label": "pnpm clean (functions)",
            "command": "pnpm run clean",
            "dependsOn": "pnpm install (functions)",
            "options": {
                "cwd": "${workspaceFolder}/src\\emails"
            }
        }
    ],

    "inputs": [
        {
            "id": "dotEnvFilePath",
            "type": "command",
            "command": "azure-dev.commands.getDotEnvFilePath"
        }
    ]
}
